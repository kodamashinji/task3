  dynamitecoolguy@gmail.com
  026845558380  ( https://026845558380.signin.aws.amazon.com/console )

IAM:
  ユーザー: kodama (AdministratorAccessをアタッチ)
  Billing and Cost ManagementのIAMユーザーによる請求情報へのアクセスを有効化

  ポリシーの新規作成
    ViewBillingAll → 作ったポリシーをユーザーkodamaに付与
    {
      "Version": "2012-10-17",
      "Statement": [
          {
              "Effect": "Allow",
              "Action": "aws-portal:ViewBilling",
              "Resource": "*"
          }
      ]
    }

  ロール:
    lambda-all-role
      Lambdaロール / AmazonEC2FullAccess, AmazonS3FullAccess, AWSLambdaFullAccess, AmazonSQSFullAccess

EC2:
  インスタンス作成:
    T2, AmazonLinux, ほぼデフォルト設定, Public IPなし
    セキュリティグループ: ssh only
    インスタンスID: i-0f2ace5d656e6fa62
    # sudo yum update && sudo yum install python3 git && pip3 install boto3 pyarrow pandas smart_open
    # ssh-keygen -t rsa
    # eval "$(ssh-agent -s)"
    # ssh-add ~/.ssh/id_rsa
    # cat ~/.ssh/id_rsa.pub   (githubに貼り付け)
    # git config --global user.email "vendetta@pa2.so-net.ne.jp"
    # git config --global user.name "Shinji Kodama"
    # git clone git@github.com:kodamashinji/task3.git
    # aws configure


SQS:
  キュー名: request-queue
    種類: 標準キュー
    パラメータ: デフォルト

API Gateway:
  API名: position
    メソッド リソース: POST /register
      統合リクエスト:
        Lambda : parse-request

    メソッド リソース: GET /getlocation/{ymd}
      統合リクエスト:
        Lambda : get-location-list
        マッピングテンプレート:
          コンテンツタイプ: application/json
            {
                "ymd":  "$input.params('ymd')"
            }
      メソッドレスポンス:
        ステータス: 301
          レスポンスヘッダー: Location
        ステータス: 404
          レスポンス本文
          コンテンツタイプ: application/json
      統合レスポンス:
        ステータス: 301 (デフォルト)
          ヘッダーマッピング:
            レスポンスヘッダー: Location
              integration.response.body.Location
        ステータス: 404 (エラー正規表現: '.*not found.*'
          マッピングテンプレート:
            コンテンツタイプ: application/json
              {}

    デプロイ:  https://gaau8g4xac.execute-api.ap-northeast-1.amazonaws.com/production
    リソースポリシー:
    {
        "Version": "2012-10-17",
        "Statement": [
            {
                "Effect": "Allow",
                "Principal": "*",
                "Action": "execute-api:Invoke",
                "Resource": [
                    "arn:aws:execute-api:ap-northeast-1:026845558380:gaau8g4xac/production/POST/register",
                    "arn:aws:execute-api:ap-northeast-1:026845558380:gaau8g4xac/production/GET/getlocation/*"
                ]
            }
        ]
    }


S3:
  バケット: //me32as8cme32as8c-task3-location
    サブフォルダ: /work, /parted

  バケット: //me32as8cme32as8c-task3-download


Redshift:
  IAMロール: redshift-role
    Redshift
      Redshift - Customizable
        AmazonS3ReadOnlyAccess, AWSGlueConsoleFullAccessポリシーを付与

  セキュリティグループの作成:
    outbound
      TCP/5439 0.0.0.0/0

  クラスター: task3
    データベース名: location
    ポート: 5439
    ノードタイプ: dc2.large
    パブリックアクセス可能: Yes
    エンドポイント: task3.coni1ixwsfmu.ap-northeast-1.redshift.amazonaws.com:5439

CloudWatch Events:
  名前: call-start-collect-server
    cron式: 15 15 * * ? *
    ターゲット: Lambda(start-collect-server)
  
  名前: call-store-request
    cron式: 0/5 * * * ? *
    ターゲット: Lambda(store-request)
